"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[615],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),u=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=u(e.components);return o.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},s=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=u(n),d=r,f=s["".concat(p,".").concat(d)]||s[d]||c[d]||a;return n?o.createElement(f,l(l({ref:t},m),{},{components:n})):o.createElement(f,l({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=s;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<a;u++)l[u]=n[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}s.displayName="MDXCreateElement"},6071:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:5},l="Recommended Setup",i={unversionedId:"usage/recommended-setup",id:"usage/recommended-setup",title:"Recommended Setup",description:"One advantage of the factory pattern is that it can help reduce clutter through dependency injections.",source:"@site/docs/usage/recommended-setup.md",sourceDirName:"usage",slug:"/usage/recommended-setup",permalink:"/docs/usage/recommended-setup",draft:!1,editUrl:"https://github.com/modular-component/website/docs/usage/recommended-setup.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Testing Components",permalink:"/docs/usage/testing-components"},next:{title:"The extension system",permalink:"/docs/extensions/writing-extensions"}},p={},u=[{value:"Building your export",id:"building-your-export",level:2},{value:"Using your factory",id:"using-your-factory",level:2},{value:"Using named exports with namespaced import",id:"using-named-exports-with-namespaced-import",level:2}],m={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"recommended-setup"},"Recommended Setup"),(0,r.kt)("p",null,"One advantage of the factory pattern is that it can help reduce clutter through dependency injections.\nTo take advantage of this feature to a maximum, we recommend building a single import for your modular factory."),(0,r.kt)("h2",{id:"building-your-export"},"Building your export"),(0,r.kt)("p",null,"Somewhere in your setup, create a file to hold your factory. Let's call it ",(0,r.kt)("inlineCode",{parentName:"p"},"modular-component.ts")," for the sake of the\nexample."),(0,r.kt)("p",null,"In this file, import ",(0,r.kt)("inlineCode",{parentName:"p"},"ModularComponent")," and all the stages you want to expose, official or custom-made."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { ModularComponent } from '@modular-component/core'\nimport { render, lifecycle, defaultProps } from '@modular-component/default'\nimport { components } from '@modular-component/with-components'\nimport { locale } from './custom-stages/with-locale'\nimport { globalStore } from './custome-stages/with-global-store'\n")),(0,r.kt)("p",null,"You can then export everything in a single ",(0,r.kt)("inlineCode",{parentName:"p"},"Modular")," variable, renaming ",(0,r.kt)("inlineCode",{parentName:"p"},"ModularComponent")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"Component")," in the process:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export const Modular = {\n  Component: ModularComponent,\n  render,\n  lifecycle,\n  defaultProps,\n  components,\n  locale,\n  globalStore,\n}\n")),(0,r.kt)("h2",{id:"using-your-factory"},"Using your factory"),(0,r.kt)("p",null,"With this centralized export, you can easily build modular components throughout your app by simply importing\nyour ",(0,r.kt)("inlineCode",{parentName:"p"},"Modular")," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Modular } from './modular-component'\n\nexport const MyComponent = Modular.Component('MyComponent')\n  .with(Modular.globalStore())\n  .with(Modular.lifecycle(() => {\n    // ...\n  }))\n  .with(Modular.render(() => {\n    // ...\n  }))\n")),(0,r.kt)("h2",{id:"using-named-exports-with-namespaced-import"},"Using named exports with namespaced import"),(0,r.kt)("p",null,"Depending on your preferences, you can also use named exports and import your factory through\na namespaced import:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"export { ModularComponent as Component } from '@modular-component/core'\nexport * from '@modular-component/default'\nexport * from '@modular-component/with-components'\nexport * from './custom-stages/with-locale'\nexport * from './custom-stages/with-global-store'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import * as Modular from './modular-component'\n\nexport const MyComponent = Modular.Component('MyComponent')\n  .with(Modular.globalStore())\n  .with(Modular.lifecycle(() => {\n    // ...\n  }))\n  .with(Modular.render(() => {\n    // ...\n  }))\n")))}c.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[313],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,d=u["".concat(c,".").concat(m)]||u[m]||f[m]||i;return n?o.createElement(d,l(l({ref:t},p),{},{components:n})):o.createElement(d,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var s=2;s<i;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5351:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var o=n(7462),r=(n(7294),n(3905));const i={sidebar_position:3},l="@modular-component/with-lifecycle",a={unversionedId:"extensions/official/with-lifecycle",id:"extensions/official/with-lifecycle",title:"@modular-component/with-lifecycle",description:"Basic stage allowing to save the result of a custom hook to a lifecycle argument passed down to further stages.",source:"@site/docs/extensions/official/with-lifecycle.md",sourceDirName:"extensions/official",slug:"/extensions/official/with-lifecycle",permalink:"/docs/extensions/official/with-lifecycle",draft:!1,editUrl:"https://github.com/modular-component/website/docs/extensions/official/with-lifecycle.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"@modular-component/with-default-props",permalink:"/docs/extensions/official/with-default-props"},next:{title:"@modular-component/with-components",permalink:"/docs/extensions/official/with-components"}},c={},s=[{value:"Usage",id:"usage",level:2},{value:"Multiple calls",id:"multiple-calls",level:2},{value:"Implementation",id:"implementation",level:2}],p={toc:s};function f(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"modular-componentwith-lifecycle"},"@modular-component/with-lifecycle"),(0,r.kt)("p",null,"Basic stage allowing to save the result of a custom hook to a ",(0,r.kt)("inlineCode",{parentName:"p"},"lifecycle")," argument passed down to further stages.\nThe lifecycle hook receives the previous argument map as parameter, and can therefore use props or any other\ninjected argument."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { modularFactory } from '@modular-component/core'\nimport { WithLifecycle } from '@modular-component/with-lifecycle'\n\nconst ModularComponent = modularFactory\n  .extend(WithLifecycle)\n  .build()\n\nconst MyComponent = ModularComponent()\n  .withLifecycle(() => {\n    // Write component state & logic here\n  })\n  .withRender(({ props, lifecycle }) => (\n    // Use computed lifecycle in the render phase\n  ))\n")),(0,r.kt)("h2",{id:"multiple-calls"},"Multiple calls"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"withLifecycle")," is a ",(0,r.kt)("strong",{parentName:"p"},"single")," stage, further calls to the stage will ",(0,r.kt)("em",{parentName:"p"},"replace")," the stage definition in its original place."),(0,r.kt)("p",null,"This allows switching the lifecycle implementation logic while keeping its interface stable, either for reusing the render\nphase, or for testing purposes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const SimpleComponent = ModularComponent()\n  .withLifecycle(() => React.useState(false))\n  .withRender(({ lifecycle }) => (\n    <div>\n      <span>Current state: {lifecycle[0] ? 'true' : 'false'}</span>\n      <button onClick={() => lifecycle[1](v => !v)}>Toggle</button>\n    </div>\n  ))\n\n// Override lifecycle with a default value for testing purposes\nconst ControlledRender = SimpleComponent.withLifecycle([true, mock()])\n")),(0,r.kt)("h2",{id:"implementation"},"Implementation"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"withLifecycle")," is a very straightforward stage that does not transformation nor impose any restriction on the generated\nformat. Its definition is therefore a simple field mapping:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { createMethodRecord } from '@modular-component/core'\n\nexport const WithLifecycle = createMethodRecord({\n  withLifecycle: { field: 'lifecycle' },\n} as const)\n")))}f.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[147],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>u});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=r.createContext({}),s=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(t),u=o,f=m["".concat(d,".").concat(u)]||m[u]||p[u]||i;return t?r.createElement(f,a(a({ref:n},c),{},{components:t})):r.createElement(f,a({ref:n},c))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1150:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:5},a="@modular-component/with-conditional-render",l={unversionedId:"extensions/official/with-conditional-render",id:"extensions/official/with-conditional-render",title:"@modular-component/with-conditional-render",description:"Provides three stages that allow conditional rendering in ModularComponents:",source:"@site/docs/extensions/official/with-conditional-render.md",sourceDirName:"extensions/official",slug:"/extensions/official/with-conditional-render",permalink:"/docs/extensions/official/with-conditional-render",draft:!1,editUrl:"https://github.com/modular-component/website/docs/extensions/official/with-conditional-render.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"@modular-component/with-components",permalink:"/docs/extensions/official/with-components"}},d={},s=[{value:"Usage",id:"usage",level:2},{value:"Multiple conditions and fallbacks",id:"multiple-conditions-and-fallbacks",level:2},{value:"Implementation",id:"implementation",level:2}],c={toc:s};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"modular-componentwith-conditional-render"},"@modular-component/with-conditional-render"),(0,o.kt)("p",null,"Provides three stages that allow conditional rendering in ",(0,o.kt)("inlineCode",{parentName:"p"},"ModularComponent"),"s:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"with(condition)")," will set a customizable argument to either ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"false"),", based\non current arguments,"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"with(conditionalFallback)")," takes a ",(0,o.kt)("inlineCode",{parentName:"li"},"FunctionComponent")," as parameter, and\nrenders it when a customizable argument is set to ",(0,o.kt)("inlineCode",{parentName:"li"},"true"),", filling the ",(0,o.kt)("inlineCode",{parentName:"li"},"render")," argument in the process,"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"with(conditionalRender)")," also takes a ",(0,o.kt)("inlineCode",{parentName:"li"},"FunctionComponent")," as parameter, and\nrenders it if the ",(0,o.kt)("inlineCode",{parentName:"li"},"render")," argument was not filled earlier.")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { ModularComponent } from '@modular-component/core'\nimport { condition, conditionalFallback, conditionalRender } from '@modular-component/with-conditional-render'\n\nconst ConditionalComponent = ModularComponent<{ enabled?: boolean }>()\n  .with(condition('disabled', ({ props }) => props.enabled !== true))\n  .with(conditionalFallback('disabled', () => <>I'm disabled!</>))\n  .with(lifecycle(() => {\n    // Some data fetching logic...\n    return { loading, data }\n  }))\n  .with(condition('loading', ({ lifecycle }) => lifecycle.loading === false))\n  .with(conditionalFallback('loading', () => <>I'm loading!</>))\n  .with(conditionalRender(({ lifecycle }) => (\n    <>I'm enabled and loaded, here is the content: {lifecycle.data}</>\n  )))\n")),(0,o.kt)("h2",{id:"multiple-conditions-and-fallbacks"},"Multiple conditions and fallbacks"),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"condition")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"conditionalFallback")," multiple times in the same pipeline by providing different\nargument names as the first parameter."),(0,o.kt)("h2",{id:"implementation"},"Implementation"),(0,o.kt)("p",null,"The implementation for those stages is a bit more involved than other official extensions. Here, we have restrictions\nfor each stage, as well as stage hooks."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { FunctionComponent } from 'react'\nimport { ModularStage } from '@modular-component/core'\n\nexport function condition<Args, Name extends string>(\n  name: Name,\n  useCondition: (args: Args) => boolean,\n): ModularStage<Name, (args: Args) => boolean> {\n  return { field: name, useStage: useCondition }\n}\n\nexport function conditionalFallback<\n  Args extends { [key in Name]: boolean } & {\n    render?: ReturnType<FunctionComponent>\n  },\n  Name extends string,\n>(\n  name: Name,\n  useRender: (args: Args) => ReturnType<FunctionComponent>,\n): ModularStage<`render-${Name}`, (args: Args) => void> {\n  return {\n    field: `render-${name}`,\n    useStage: (args: Args) => {\n      args.render = !args[name] || args.render ? args.render : useRender(args)\n    },\n  }\n}\n\nexport function conditionalRender<Args, Ref>(\n  useRender: (\n    args: Args,\n    ref: React.ForwardedRef<Ref>,\n  ) => ReturnType<FunctionComponent>,\n): ModularStage<\n  'render',\n  (args: Args, ref: React.ForwardedRef<Ref>) => ReturnType<FunctionComponent>\n> {\n  return {\n    field: 'render',\n    useStage: (args: Args, ref: React.ForwardedRef<Ref>) =>\n      (args as any).render ?? useRender(args, ref),\n  }\n}\n")))}p.isMDXComponent=!0}}]);
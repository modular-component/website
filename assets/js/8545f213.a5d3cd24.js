"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[313],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=s(n),m=o,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||i;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5351:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:3},a="@modular-component/with-lifecycle",c={unversionedId:"extensions/official/with-lifecycle",id:"extensions/official/with-lifecycle",title:"@modular-component/with-lifecycle",description:"Basic stage allowing to save the result of a custom hook to a lifecycle argument passed down to further stages.",source:"@site/docs/extensions/official/with-lifecycle.md",sourceDirName:"extensions/official",slug:"/extensions/official/with-lifecycle",permalink:"/docs/extensions/official/with-lifecycle",draft:!1,editUrl:"https://github.com/modular-component/website/docs/extensions/official/with-lifecycle.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"@modular-component/with-default-props",permalink:"/docs/extensions/official/with-default-props"},next:{title:"@modular-component/with-components",permalink:"/docs/extensions/official/with-components"}},l={},s=[{value:"Usage",id:"usage",level:2},{value:"Implementation",id:"implementation",level:2}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"modular-componentwith-lifecycle"},"@modular-component/with-lifecycle"),(0,o.kt)("p",null,"Basic stage allowing to save the result of a custom hook to a ",(0,o.kt)("inlineCode",{parentName:"p"},"lifecycle")," argument passed down to further stages.\nThe lifecycle hook receives the previous argument map as parameter, and can therefore use props or any other\ninjected argument."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { ModularComponent } from '@modular-component/core'\nimport { lifecycle } from '@modular-component/with-lifecycle'\n\nconst MyComponent = ModularComponent()\n  .with(lifecycle(({ props }) => {\n    // Write component state & logic here\n  }))\n  .with(render(({ props, lifecycle }) => (\n    // Use computed lifecycle in the render phase\n  )))\n")),(0,o.kt)("h2",{id:"implementation"},"Implementation"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"with(lifecycle)")," receives a function taking the current arguments map as parameter. It uses this function as the\nstage hook directly:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { ModularStage } from '@modular-component/core'\n\nexport function lifecycle<Args extends {}, Return>(\n  useLifecycle: (args: Args) => Return,\n): ModularStage<'lifecycle', (args: Args) => Return> {\n  return { field: 'lifecycle', useStage: useLifecycle }\n}\n")))}u.isMDXComponent=!0}}]);
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>ModularComponent Blog</title>
        <link>https://modular-component.dev/case-studies</link>
        <description>ModularComponent Blog</description>
        <lastBuildDate>Sun, 23 Oct 2022 17:43:14 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Using an application global store]]></title>
            <link>https://modular-component.dev/case-studies/using-global-store</link>
            <guid>using-global-store</guid>
            <pubDate>Sun, 23 Oct 2022 17:43:14 GMT</pubDate>
            <description><![CDATA[In this case study, we see how you could integrate an Easy-Peasy-powered Redux store through]]></description>
            <content:encoded><![CDATA[<p>In this case study, we see how you could integrate an <a href="https://easy-peasy.vercel.app/" target="_blank" rel="noopener noreferrer">Easy-Peasy</a>-powered Redux store through
a custom stage in your application.</p><p><em>ðŸš§ Work in progress...</em></p>]]></content:encoded>
            <category>store</category>
            <category>redux</category>
        </item>
        <item>
            <title><![CDATA[Using an i18n provider]]></title>
            <link>https://modular-component.dev/case-studies/using-internationalisation</link>
            <guid>using-internationalisation</guid>
            <pubDate>Sat, 22 Oct 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[In this case study, we look at injecting a component localization data using i18next]]></description>
            <content:encoded><![CDATA[<p>In this case study, we look at injecting a component localization data using <a href="https://www.i18next.com/" target="_blank" rel="noopener noreferrer"><code>i18next</code></a>
and TypeScript to build a custom modular stage.</p><p><em>ðŸš§ Work in progress...</em></p>]]></content:encoded>
            <category>i18n</category>
        </item>
    </channel>
</rss>